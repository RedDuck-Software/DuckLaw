@page "/"
@using MudBlazor
@inject Duck.Client.Service.IService serv
@inject NavigationManager NavigationManager
@inject HttpClient client
@inject IJSRuntime js
@using Duck.Shared
@using System.IO
@inject ISnackbar Snackbar
<link href="css/UserForm.css" rel="stylesheet" />
<EditForm Model="@render" OnValidSubmit="Create">
    <div id="login-box">
        <ul class="nav nav-tabs justify-content-around" role="tablist">
            <li class="nav-item">
                <a class="nav-link active" data-toggle="tab" href="#home">Form</a>
            </li>
            <li class="nav-item">
                <h4>RedDuck Law</h4>
            </li>
            <li class="nav-item">
                <a class="nav-link" data-toggle="tab" href="#menu2">Upload</a>
            </li>
        </ul>
        <!-- Tab panes -->
        <div class="tab-content">
            <div id="home" class="container tab-pane active">
                <div class="form-row">
                    <br />
                    <div class="form-group col-md-6 ml-md-auto">
                        <br />
                        <label for="Number"></label>
                        <input @bind-value="render.Num" placeholder="Номер судебного дела" class="form-group" type="text" id="Number" name="text" />
                    </div>
                    <div class="form-group col-md-6 ml-md-auto ">
                        <br />
                        <label for="inputPassword4"></label>
                        <input @bind-value="render.Text" placeholder="Поиск в тексте решения" class="form-group" id="Search" type="text" name="text" />
                    </div>
                </div>
                <div class="form-row">
                    <div id="FormDecision" class="col-md-6 ml-md-auto">
                        <label>Форма судебного решение</label>
                        <InputSelect class="form-control" @bind-Value="render.JusticeCode">
                            <option value="1">Приговор</option>
                            <option value="2">Постановление</option>
                            <option value="3">Решение</option>
                            <option value="4">Cудебный приказ</option>
                            <option value="5">Постановление</option>
                            <option value="6">Отдельное решение</option>
                            <option value="10">Особое мнение</option>
                        </InputSelect>
                    </div>
                    <div id="Form" class="col-md-6 ml-md-auto">
                        <label>Форма судопроизводства </label>
                        <InputSelect class="form-control" @bind-Value="render.JudgmentCode">
                            <option value="1">Гражданское</option>
                            <option value="2">Уголовное</option>
                            <option value="3">Хозяйственное</option>
                            <option value="4">Административное</option>
                            <option value="5">Дела об административных правонарушениях</option>
                        </InputSelect>
                    </div>
                </div>
                <br />
                <div class="form-row justify-content-md-center">
                    <div>
                        <label>Укажите тип инстанции</label>
                        <InputSelect id="Instance" class="form-control col-md-12 " @bind-Value="render.Stage">
                            <option value="first">Первая</option>
                            <option value="appeal">
                                Апелляционная
                            </option>
                            <option value="cassation">Кассационная</option>
                        </InputSelect>

                    </div>
                </div>
                <br />
                <div class="form-group justify-content-end">
                    <input id="submit" type="submit" class="btn btn-primary" name="signup_submit" value="Отправить" />
                </div>
            </div>
            <div id="menu2" class="container tab-pane fade">
                <div class="form-control-file justify-content-between">
                    <div>
                        <MudPaperc @ondragenter="@(()=>_dragEnterStyle="drag-enter")"
                                   @ondragleave="@(()=>_dragEnterStyle=null)"
                                   @ondragend="@(()=>_dragEnterStyle=null)"
                                   Class=@("drag-drop-zone "+ _dragEnterStyle)>
                            <InputFile OnChange="OnInputFileChanged" multiple class="drag-drop-input" />
                            @if (fileNames.Count() == 0)
                            {
                                <MudText Typo="Typo.h3" Class="text-center">Drag and drop files here or click</MudText>
                            }
                            else
                            {
                                <MudList Style="padding:2em;width:100%;" Dense="true">
                                    @foreach (var file in fileNames)
                                    {
                                        if (file.EndsWith("pdf") || file.EndsWith("doc") || file.EndsWith("docx"))
                                        {
                                            <MudListItem @key="@file">
                                                <MudChip Color="Color.Dark"
                                                         Style="width:60px; overflow:hidden;"
                                                         Text="@(file.Split(".").Last())" />
                                                @file
                                            </MudListItem>
                                        }
                                        else
                                        {
                                <MudListItem>
                                    <MudChip Color="Color.Dark"
                                             Style="width:60px; overflow:hidden;"
                                             Text="error" />
                                    Incorrect file format.Format required : Pdf,Doc,Docx
                                </MudListItem>

                                        }
                                    }
                                </MudList>

                            }

                        </MudPaperc>
                        <input id="submitUpload" type="submit" class="btn btn-primary" name="signup_submit" value="Отправить" />
                    </div>

                </div>
            </div>
        </div>
    </div>

</EditForm>

@code {
    Duck.Shared.Render render = new Duck.Shared.Render();

    async Task Create()
    {
        if (selectedFiles != null)
        {
            foreach (var file in selectedFiles)
            {
                if (file.Name.EndsWith("pdf") || file.Name.EndsWith("docx") || file.Name.EndsWith("doc"))
                {
                    Stream stream = file.OpenReadStream(1000000);
                    MemoryStream ms = new MemoryStream();

                    await stream.CopyToAsync(ms);
                    stream.Close();
                    UploadedFile uploadedFile = new UploadedFile();
                    Guid guid = Guid.NewGuid();
                    uploadedFile.FileName = Convert.ToString(guid) + file.Name;
                    uploadedFile.FileContent = ms.ToArray();
                    ms.Close();
                    await client.PostAsJsonAsync<UploadedFile>("/api/fileupload", uploadedFile);
                    Message = $"{selectedFiles.Count} file(s) uploaded on server";
                    this.StateHasChanged();
                    NavigationManager.NavigateTo("/Result");
                }
            }
        }
        else
        {
            await serv.CreateNewBlogPost(render);
            NavigationManager.NavigateTo("/Result");
        }
    }
    string Message = "No file(s) selected";
    IReadOnlyList<IBrowserFile> selectedFiles;
    string _dragEnterStyle;
    IList<string> fileNames = new List<string>();
    void OnInputFileChanged(InputFileChangeEventArgs e)
    {

        selectedFiles = e.GetMultipleFiles();
        var files = e.GetMultipleFiles();
        fileNames = files.Select(f => f.Name).ToList();

    }
    void Upload()
    {
        //Upload the files here
        Snackbar.Configuration.PositionClass = Defaults.Classes.Position.TopCenter;
        Snackbar.Add("TODO: Upload your files!", Severity.Normal);
    }

}